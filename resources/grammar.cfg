program -> block

block -> e | decl block

decl -> interface | implementation | extern | factor

factor -> NUMBER | STRING | ID | call | function | if

interface -> "inteface" ID "<" ID ">" "{" interface_block "}"

interface_block -> e | interface_decl interface_block

interface_decl -> virtual | function

implementation -> "implementation" ID "<" ID ">" "{" implementation_block "}"

implementation_block -> e | implementation_decl implementation_block

implementation_decl -> typeless_function | extern

typeless_function -> ID "(" id_list ")" "{" factor_list "}"

id_list -> e | ID id_list'

id_list' -> e | "," ID id_list'

virtual -> "virtual" prototype

extern -> "extern" prototype

prototype -> ID "(" types ")" ":" type

types -> e | type types'

types' -> e | "," type types'

function -> ID "(" function_args ")" ":" type "{" factor_list "}"

function_args -> e | function_arg function_args'

function_args' -> e | "," function_arg function_args'

function_arg -> ID ":" type

factor_list -> e | factor factor_list

call -> (ID | function) "(" args_list ")"

args_list -> e | factor args_list'

args_list' -> e | "," factor args_list

if -> "if" "(" factor ")" body else_body

body -> factor | "{" factor_list "}"

else_body -> e | "else" body
