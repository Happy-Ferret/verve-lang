(defn parseFactorR (sum expr)
  (if (gt (count expr) 0)
      ((lambda (c)
        (if (and 
            (gte c '0')
            (lte c '9'))
          (parseFactorR (add (mul 10 sum) (sub c '0')) (substr expr 1))
          (list sum expr)
        )
      ) (at expr 0))
      (list sum expr)
  )
)

(defn parseFactor (e) 
  (parseFactorR 0 e)
)

(defn evalExpr (e) 
  (at (parseFactor e) 0)
)

(print (evalExpr "22"))
