// RUN: %verve | %check

{ x = 1 } // CHECK: {x = 1} : {x : Int}

fn f(x: { x: Int }) -> Int { 42 } // CHECK: : \({x : Int}\) -> Int
f({ x = 1 }) // CHECK: 42 : Int

fn f(x: { x: Int }) -> Int { x.x }
f({ x = 1 }) // CHECK: 1 : Int

enum PairT<T, U> {
  Pair(T, U)
}
enum Bool {
  True
  False
}
fn f<T, U>(x: {x: T, y: U}) -> PairT<T, U> {
  Pair(x.x, x.y)
}
f({ x = 42, y = True })

/* multiple field accesses */
({ x = { y = { z = 42 } } }).x.y.z // CHECK: 42 : Int
