// RUN: %verve | %check

type T = Int // CHECK: T : Type

fn f(x: Int) -> T { x } // CHECK-L: (Int) -> Int

f(42) // CHECK: 42 : Int

type R = { x : Int, f : (Int) -> Int } // CHECK: R : Type

fn g(x: R) -> Int {
  x.f(x.x)
}

g({ x = 42, f = fn f(x: Int) -> Int { int_mul(x, 2) } })
// CHECK: 84 : Int
