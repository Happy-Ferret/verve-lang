// RUN: %verve

enum List<T> {
  Nil
  Cons(T, List<T>)
}

fn f(x: List) -> List { x }
fn g(x: List<Int>) -> List<Int> { x }
fn h(x: List<String>) -> List<String> { x }
match h(f(Cons(1, Nil))) {
  case Cons(x, _): x
}
