
type human {
  Person()
}

type animal {
  Dog()
  Cat()
}

interface interact<t> {
  virtual greet(t) -> void
}

implementation interact<human> {
  fn greet(_) {
    print("Hello!")
  }
}

implementation interact<animal> {
  fn greet(animal) {
    print(match animal {
      Dog() => "Woof!"
      Cat() => "Meow!"
    })
  }
}

greet(Person()) // => "Hello!"
greet(Dog())    // => "Woof!"
greet(Cat())    // => "Meow!"
